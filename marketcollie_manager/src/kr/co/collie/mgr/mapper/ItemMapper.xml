<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.collie.mgr.item">

	<select id="selectItemList" resultType="MgrItemListDomain" parameterType="kr.co.collie.mgr.item.vo.SeachItemVO">
	select item_num, price, cate_name, item_name, item_unit, item_weight, input_date
	from item
	
	</select>
  
  <insert id="insertItem" parameterType="kr.co.collie.mgr.item.vo.MgrItemAddVO">
  insert into item(ITEM_NUM, CATE_NUM, ITEM_NAME, ITEM_STOCK, ITEM_PRICE, ITEM_UNIT, ITEM_WEIGHT,
								ITEM_GUIDE, ITEM_TITLE, ITEM_SUBTITLE, ITEM_DETAIL, ITEM_IMG)
  values(seq_item_num.nextval, #{ CATE_NUM } , #{ ITEM_NAME }, #{ ITEM_STOCK }, #{ ITEM_PRICE }, #{ ITEM_UNIT }, #{ITEM_WEIGHT },
								#{ ITEM_GUIDE }, #{ ITEM_TITLE }, #{ ITEM_SUBTITLE }, #{ ITEM_DETAIL }, #{ ITEM_IMG } )
  </insert>
  
  <select id="selectItemDetail" resultType="kr.co.collie.mgr.item.domain.MgrItemDetailDomain">
  
  	select ca.cate_num, it.item_price, it.item_stock, ca.cate_name, it.item_name, it.item_unit,
		it.item_weight, it.item_img, it.item_guide, it.item_title, it.item_subtitle, it.item_detail, im.detail_img
	from item it, image im, category ca
	where it.cate_num = ca.cate_num and im.item_num = it.item_num
  	
  </select>
  
  <resultMap id="itemListDomain" type="kr.co.collie.user.item.domain.ItemListDomain" >
  	<result column="ITEM_NUM" property="item_num"/>
  	<result column="ITEM_PRICE" property="item_price"/>
  	<result column="ITEM_NAME" property="item_name"/> 
  	<result column="ITEM_IMG" property="item_img"/>
  </resultMap>
  
  <select id="selectSearchItem"  resultMap="itemListDomain" parameterType="String">
  	select ITEM_NUM, ITEM_PRICE, ITEM_NAME, ITEM_IMG 
  	from ITEM
  	where item_name like '%'||#{item_name}||'%'
  </select>
  
  <select id="selectItemList"  resultMap="itemListDomain" parameterType="kr.co.collie.user.pagination.RangeVO">
  	select ITEM_NUM, ITEM_PRICE, ITEM_NAME, ITEM_IMG
	from(
	  	select ITEM_NUM, ITEM_PRICE, ITEM_NAME, ITEM_IMG, row_number() over(order by item_num) rnum
	  	from ITEM
	  	where
	  	<if test='field_name eq "cate_num".toString()'>
		  	${field_name} = #{field_value}
		</if>
		<if test='field_name eq "item_name".toString()'>
			${field_name} like '%'||#{field_value}||'%'
		</if>
	  	)
	where rnum between #{start_num} and #{end_num}
  </select>
  
  <select id="selectItemListCnt" resultType="int" parameterType="kr.co.collie.user.pagination.RangeVO">
	  	select count(*)
	  	from ITEM
	  		<where>
			  	<if test='field_name eq "cate_num".toString()'>
				  	${field_name} = #{field_value}
			  	</if>
				<if test='field_name eq "item_name".toString()'>
					${field_name} like '%'||#{field_value}||'%'
				</if>	  	
	  		</where>
  </select>
  
  <select id="selectItemDetail" parameterType="int" resultType="kr.co.collie.user.item.domain.ItemDetailDomain">
  	select  ITEM_STOCK, ITEM_PRICE, ITEM_NAME, ITEM_UNIT,ITEM_WEIGHT,ITEM_GUIDE,
			ITEM_TITLE, ITEM_SUBTITLE, ITEM_DETAIL, ITEM_IMG
	from ITEM
	where ITEM_NUM =#{ITEM_NUM}
	
  </select>
  <select id="detailImgList" resultType="String" parameterType="int">
  	SELECT DETAIL_IMG
  	FROM IMAGE
  	WHERE ITEM_NUM =#{ITEM_NUM}
  </select>
  
  <!-- 리뷰 목록을 조회하는 일 : field_name = item_num -->
  <select id="selectReviewList" parameterType="kr.co.collie.user.pagination.RangeVO" resultType="kr.co.collie.user.item.domain.ReviewDomain">
	select review_num, review_subject, id, input_date
	from(select r.review_num, r.review_subject, m.id, r.input_date, row_number() over(order by r.review_num desc) rnum
			from review r, member m
			where r.member_num=m.member_num and ${ field_name } = #{ field_value })
	where rnum between #{ start_num } and #{ end_num }
  </select>
  
  <!-- 리뷰 목록 페이지네이션을 위해 목록 개수를 세는 일 -->
  <select id="selectReviewListCnt" parameterType="kr.co.collie.user.pagination.RangeVO" resultType="int">
  	select count(*)
  	from review
  	where ${ field_name } = #{ field_value }
  </select>
  
  <!-- 리뷰 상세 내용을 조회하는 일 -->
  <select id="selectReviewDetail" parameterType="kr.co.collie.user.item.vo.ReviewDetailVO" resultType="String">
  	select review_content
  	from review
  	where item_num = #{ item_num } and review_num = #{ review_num }
  </select>
  
  <!-- 리뷰를 작성할 권한이 있는지(상품을 구매했는지) 확인하는 일 -->
  <select id="selectReviewFlag" parameterType="kr.co.collie.user.item.vo.ReviewFlagVO" resultType="int">
	select count(*)
	from order_item oi, item i, order_form f
	where oi.item_num=i.item_num and oi.order_num=f.order_num
			 and i.item_num=#{ item_num } and f.member_num=#{ member_num }  
  </select>
  
  <!-- 리뷰를 작성하는 일 -->
  <insert id="insertReview" parameterType="kr.co.collie.user.item.vo.ReviewVO">
	insert into review(review_num, item_num, member_num, review_subject, review_content)
	values (seq_review_num.nextval, #{ item_num }, #{ member_num }, #{ review_subject }, #{ review_content })
  </insert>
  
  <!-- 문의 리스트를 조회하는 일 -->
   <select id="selectItemQnaList" parameterType="kr.co.collie.user.item.vo.ItemQnaListVO" resultType="kr.co.collie.user.item.domain.ItemQnaDomain">
	select idx, item_qna_num, item_qna_subject, item_qna_flag, to_char(input_date, 'yyyy-mm-dd') input_date, id
	from(select row_number() over(order by item_qna_num desc) idx, iq.item_qna_num, iq.item_qna_subject, iq.item_qna_flag, iq.input_date, m.id
			from item_qna iq, member m
			where iq.member_num=m.member_num and iq.item_num=#{ item_num })
	where idx between #{ start_num } and #{ end_num }
  </select>
   
   <!-- 문의 상세내역을 조회하는 일 -->
  <select id="selectItemQnaDetail" parameterType="int" resultType="kr.co.collie.user.item.domain.ItemQnaDetailDomain">
  	select item_qna_content, item_qna_reply, to_char(reply_date, 'yyyy-mm-dd') reply_date
  	from item_qna
  	where item_qna_num=#{item_qna_num}
  </select>
  
</mapper>